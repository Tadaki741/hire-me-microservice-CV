services:
  db:
    image: postgres:9.6.2-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: microservice-cv
    volumes:
      - postgres_db:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "35432:5432"
    networks:
      cv-network:
  redis:
    container_name: redis-cv
    image: redis
    ports:
      - "7379:6379"
    networks:
      cv-network:

  hire-me-microservice-cv:
    image: hire-me-microservice-cv
    networks:
      hire-me-network:
      cv-network:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: hire-me-microservice-cv
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/microservice-cv
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=123456
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
      - SERVER_PORT=6379
      - SERVER_PORT=18080
      - USER_SERVICE_URL=http://hire-me-microservice-user:8080
    ports:
      - "18080:18080"
    depends_on:
      db:
        condition: service_healthy

volumes:
  postgres_db:

networks:
  cv-network:
    driver: bridge
  hire-me-network:
    external: true
    name: hire-me-network